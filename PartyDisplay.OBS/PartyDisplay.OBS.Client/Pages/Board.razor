@page "/board"
@rendermode InteractiveWebAssembly
@using Microsoft.AspNetCore.SignalR.Client
@using PartyDisplay.OBS.Lib.Xfer
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Board Info</PageTitle>

<h3>@_game</h3>
<h1>@_name</h1>
<h2>Turn @_turn.Count / @_turn.Limit</h2>

@code {
    private HubConnection? _hubConnection;
    private string? _game;
    private string? _name;
    private Turn _turn = new();

    protected override async Task OnInitializedAsync() {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/hub/board"))
            .Build();

        _hubConnection.On<string>("SetGame", (game) => {
            _game = game;
            InvokeAsync(StateHasChanged);
        });
        
        _hubConnection.On<string>("SetName", (name) => {
            _name = name;
            InvokeAsync(StateHasChanged);
        });

        _hubConnection.On<Turn>("ReceiveTurn", (turn) => {
            _turn = turn;
            InvokeAsync(StateHasChanged);
        });

        await _hubConnection.StartAsync();
    }

    public bool IsConnected => _hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync() {
        if (_hubConnection is not null) {
            await _hubConnection.DisposeAsync();
        }
    }
}